<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/security
	   					         http://www.springframework.org/schema/security/spring-security.xsd
						         http://www.springframework.org/schema/beans
						         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <http>
        <form-login login-page="/login" default-target-url="/index" authentication-failure-url="/failed" />
        <logout logout-success-url="/login" />
        <remember-me data-source-ref="dataSource"/>

        <intercept-url pattern="/index" access="ROLE_ADMINISTRATOR, ROLE_USER" method="GET"/>

        <http-basic />
    </http>

    <jdbc-user-service id="userDetails" data-source-ref="dataSource"
                       users-by-username-query="SELECT username, password, enabled FROM users WHERE username = ?"
                       authorities-by-username-query="SELECT u.username, r.role_name FROM users u, roles r WHERE u.role_id = r.role_id AND u.username = ?" />

    <beans:bean id="passwordEncoder"
                class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

    <beans:bean id="saltSource"
                class="org.springframework.security.authentication.dao.ReflectionSaltSource"
                p:userPropertyToUse="username" />

    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
                p:passwordEncoder-ref="passwordEncoder"
                p:saltSource-ref="saltSource"
                p:userDetailsService-ref="userDetails" />

    <authentication-manager>
        <authentication-provider ref="daoAuthenticationProvider" />
    </authentication-manager>

</beans:beans>